version: "3.9"

services:
  db:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pathwise}
      POSTGRES_USER: ${POSTGRES_USER:-pathwise}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pathwise}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pathwise}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Local SMTP server and web UI for testing magic links (free, zero-config)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI http://localhost:8025

  api:
    build:
      context: ./backend
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
      - ./backend/.env
    environment:
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${API_PORT:-8000}:8000"

  worker:
    build:
      context: ./backend
    command: poetry run celery -A app.core.celery_app.celery_app worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
      - ./backend/.env
    depends_on:
      - redis
      - db

  beat:
    build:
      context: ./backend
    command: poetry run celery -A app.core.celery_app.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
      - ./backend/.env
    depends_on:
      - redis
      - db

  frontend:
    build:
      context: ./frontend
    command: sh -c "npx prisma generate && (npx prisma migrate deploy || npx prisma db push) && npm run dev -- --hostname 0.0.0.0 --port 3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./.env
      - ./frontend/.env
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
      mailhog:
        condition: service_started
    ports:
      - "${FRONTEND_PORT:-3000}:3000"

volumes:
  postgres_data:
